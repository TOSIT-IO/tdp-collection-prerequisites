# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: Install sssd and oddjob-mkhomedir
  ansible.builtin.package:
    name:
      - sssd
      - oddjob-mkhomedir

- name: Check if kcm_default_ccache conf exists
  ansible.builtin.stat:
    path: /etc/krb5.conf.d/kcm_default_ccache
  register: kcm_default_ccache_conf

- name: Disable sssd-kcm cache
  ansible.builtin.replace:
    path: /etc/krb5.conf.d/kcm_default_ccache
    regexp: "(^(?!#).*default_ccache_name = KCM:*)"
    replace: '#\1'
  when:
    - kcm_default_ccache_conf.stat.exists
    - ansible_distribution_major_version | int > 7

- name: Template sssd.conf
  ansible.builtin.template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    mode: 0600
  notify: restart sssd

- block:
    - name: Check authconfig state
      ansible.builtin.shell: authconfig --test
      register: authconfig_test
      changed_when: no
      check_mode: no

    - name: Enable ssh auth via sssd
      ansible.builtin.command: authconfig --enablesssd --enablesssdauth --update
      when: "'pam_sss is disabled' in authconfig_test.stdout"

    - name: Enable home directory creation after ssh
      ansible.builtin.command: authconfig --enablemkhomedir --update
      when: "'pam_mkhomedir or pam_oddjob_mkhomedir is disabled' in authconfig_test.stdout"
  when: ansible_distribution_major_version | int < 8

- block:
    - name: Check authselect state
      ansible.builtin.shell: authselect current
      register: authselect_current
      changed_when: no
      failed_when: authselect_current.rc not in [0, 2]
      check_mode: no

    - name: Use sssd with-mkhomedir as auth profile
      ansible.builtin.command: authselect select sssd with-mkhomedir --force
      when: "'sssd' not in authselect_current.stdout or 'with-mkhomedir' not in authselect_current.stdout"
  when: ansible_distribution_major_version | int > 7

- name: Start and enable sssd
  ansible.builtin.service:
    name: sssd
    state: started
    enabled: yes

- name: Start and enable oddjobd
  ansible.builtin.service:
    name: oddjobd
    state: started
    enabled: yes

# Restart sssd if needed before check groups and users
- ansible.builtin.meta: flush_handlers

- block:
    - name: Check groups
      ansible.builtin.shell: "getent group {{ ldap_group_names | join(' ') }} | cut -d ':' -f 1"
      changed_when: no
      register: reg_check_groups

    - name: Assert that groups are pulled from ldap to unix
      ansible.builtin.assert:
        that: item in reg_check_groups.stdout_lines
        success_msg: "Group '{{ item }}' correctly pulled from ldap"
        fail_msg: "Group '{{ item }}' not pulled from ldap"
      loop: "{{ ldap_group_names }}"

    - name: Check users
      ansible.builtin.shell: "getent passwd {{ ldap_user_names | join(' ') }} | cut -d ':' -f 1"
      changed_when: no
      register: reg_check_users

    - name: Assert that users are pulled from ldap to unix
      ansible.builtin.assert:
        that: item in reg_check_users.stdout_lines
        success_msg: "User '{{ item }}' correctly pulled from ldap"
        fail_msg: "User '{{ item }}' not pulled from ldap"
      loop: "{{ ldap_user_names }}"
  vars:
    ldap_group_names: "{{ ldap_groups | map(attribute='group') | list }}"
    ldap_user_names: "{{ ldap_users | map(attribute='user') | list }}"
