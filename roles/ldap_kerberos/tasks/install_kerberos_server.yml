# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
# --- services dependencies --- #

- name: Add krb5kdc dependency to slapd
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/krb5kdc.service
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: "^Wants="
      line: Wants=network-online.target slapd.service
    - regexp: "^After="
      line: After=syslog.target network.target network-online.target slapd.service

- name: Add kadmin dependency to slapd
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/kadmin.service
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: "^Wants="
      line: Wants=network-online.target slapd.service
    - regexp: "^After="
      line: After=syslog.target network.target network-online.target slapd.service

# --- kdc setup --- #

- name: Template krb5.conf
  ansible.builtin.template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf
  notify: restart krb5kdc

- name: Template kdc.conf
  ansible.builtin.template:
    src: kdc.conf.j2
    dest: /var/kerberos/krb5kdc/kdc.conf
  notify: restart krb5kdc

- name: Ensures directory for password stash exists
  ansible.builtin.file:
    path: "{{ ldap_password_file | dirname }}"
    state: directory

# The template is equivalent to :
# kdb5_ldap_util stashsrvpw -f {{ ldap_password_file }} {{ kdc_service_dn }}
# kdb5_ldap_util stashsrvpw -f {{ ldap_password_file }} {{ kadmin_service_dn }}
- name: Template stash ldap creds
  ansible.builtin.template:
    src: kerberos_ldap_creds.j2
    dest: "{{ ldap_password_file }}"
    owner: root
    group: root
    mode: "0600"
  notify:
    - restart krb5kdc
    - restart kadmin

- name: Create realm in LDAP
  ansible.builtin.command: kdb5_ldap_util -D {{ ldap_admin_dn }} -w {{ ldap_admin_dn_password }} create -subtrees {{ ldap_suffix }} -r {{ realm }} -s -P {{ kerberos_db_master_key }} -H ldapi:///
  args:
    creates: "/var/kerberos/krb5kdc/.k5.{{ realm }}"

- name: Start and enable KDC
  ansible.builtin.service:
    name: krb5kdc
    state: started
    enabled: yes

# --- kadmin setup --- #

- name: Template kadm5.acl
  ansible.builtin.template:
    src: kadm5.acl.j2
    dest: /var/kerberos/krb5kdc/kadm5.acl
  notify: restart kadmin

- name: Start and enable kadmin
  ansible.builtin.service:
    name: kadmin
    state: started
    enabled: yes

# --- Admin account --- #

- name: Create admin/admin principal
  ansible.builtin.command: kadmin.local -q "addprinc -pw {{ kerberos_admin_password }} {{ kerberos_admin_principal }}"
  register: reg_addprinc
  failed_when: |
    reg_addprinc is failed or
    "Principal \"" + kerberos_admin_principal + "\" created." not in reg_addprinc.stdout and
    "already exists" not in reg_addprinc.stderr
  changed_when: "'already exists' not in reg_addprinc.stderr"

# --- User accounts --- #

- name: Create Kerberos users
  ansible.builtin.command: |
    kadmin
      -r {{ realm }}
      -p {{ kadmin_principal }}
      -w {{ kadmin_password }}
      -q "addprinc -pw {{ item.password }} {{ item.user }}@{{ realm }}"
  register: reg_addprinc
  changed_when: "'already exists while creating' not in reg_addprinc.stderr"
  loop: "{{ ldap_users }}"
  loop_control:
    label: "{{ item.user }}"
